# This should now contain only those index specifications that are unique to items from sirsi
# Coment added to force a rebuild and restart
id ?= 001,first

source_f_stored = "Library Catalog"
source_f_stored += custom, getCustomLibrary, map("Special Collections=>Special Collections")
#source_f_stored += getFromFileBy001("extra_data/virginia_hathi_map.txt", "\\t", ""), mapLookupSelect("[\t]",1), (map.etas_source), unique
source_f_stored += getComplexJoinedFields("getFromFileBy001(\"extra_data/virginia_hathi_map.txt\", \"\\t\", \"\"), mapLookupSelect(\"[\t]\",1), (map.illable), unique", "999t, physical_item_map.properties, (map.illable2),  unique, sort(str,asc), first", "-"), map("^ill$=>Interlibrary Lending")

map.etas_source.deny=HathiTrust Emergency Temporary Access Service


data_source_f_stored = "sirsi"

local_notes_tsearch_stored = 946a

uva_availability_f_stored,anon_availability_f_stored =  getCustomAvailabilityForLocation
# this following line checks whether the record has a value for url_str_stored (by using the same criteria as used for that field) 
# and adds "Online" availability it the record has one
uva_availability_f_stored,anon_availability_f_stored |= custom(org.solrmarc.mixin.UrlMixin), getLabelledURLnew("Access Online"), map(".*=>Online"), unique

illable_f_stored = getFromFileBy001("extra_data/virginia_hathi_map.txt", "\\t", ""), mapLookupSelect("[\t]",1), (map.illable), unique
illable_f_stored ?= 999t, physical_item_map.properties, (map.illable2),  unique, sort(str,asc), first
illable_f_stored ?= "ill"
map.illable.allow=no_ill
map.illable.deny=ill
map.illable2.0=no_ill
map.illable2.1=ill


#these three lines delete barcodes associated with not-yet-ordered Patron Driven Acquisition items 
barcode_e_stored = 999i, (map.barcode)
map.barcode.COUTTS=null
map.barcode.displayRawIfMissing=true

summary_holdings_a =  custom, getSummaryHoldingsInfo

# facets

library_f_stored = custom, getCustomLibrary
location_f_stored = custom, getCustomLocation, map("keepRaw", "Available to Order=>")
location2_f_stored = custom, getCustomLocationWithOverride(location_override_map.properties), map("(^(?!Available to Order).*$)=>$1", "Available to Order=>")
shadowed_location_f_stored = custom, getShadowedLocation(returnHIDDEN)
circulating_f = getCustomCirculating
library_raw_f_stored = 999m, library_map.properties

# use FileLookupMixin to get date received_facet and fund_code_facet from sorted text file
# these three may need to go away
#date_received_f_stored = getFromFileBy001("extra_data/booklists_all.txt", "[|]", ""), mapLookupSelect("[|]",0)
date_received_f_stored = 999u, map("(\\d)/(\\d)/(\\d\\d\\d\\d)=>$30$10$2","(\\d\\d)/(\\d)/(\\d\\d\\d\\d)=>$3$10$2","(\\d)/(\\d\\d)/(\\d\\d\\d\\d)=>$30$1$2","(\\d\\d)/(\\d\\d)/(\\d\\d\\d\\d)=>$3$1$2"), sort(str,desc), first

fund_code_f_stored = 996a
fund_code_text_str_stored = 996b, notunique
fund_code_f_stored ?= getFromFileBy001("extra_data/booklists_all.txt", "[|]", ""), mapLookupSelect("[|]",1), mapLookupSplit(":")
#fund_code_f_stored = getFromFileBy001("extra_data/booklists_all.txt", "[|]", ""), mapLookupSelect("[|]",1), mapLookupSplit(":")

date_first_indexed_f_stored = getFromFileBy001("extra_data/new_recs_dates_sorted.txt", 20131118)

reserve_id_course_name_str_stored = getComplexJoinedFields("9997, notunique", "getComplexJoinedFields(\"9998, notunique\", \"9997?($7 matches \\".*\\"),separate,filter(\\"([A-Z]*)[^A-Z0-9]([A-Z0-9]+)([^A-Z0-9][A-Z0-9]*)*=>$1$2\\"), classnames_map.xml, notunique\", \"||\")", "9999?($7 matches \".*\"), notunique", "|"), filter("[|][{|][^|]*[|]=>|"), unique
reserve_id_e_stored = 9997, unique
reserved_barcode_str_stored = 999i?($7 matches ".*")
reserve_id_course_name_display_a = getComplexJoinedFields("9997?($7 matches \".*\"), format(\"On reserve for $7: \"), notunique",  
                                                          "getComplexJoinedFields(\"9998, notunique\", 
                                                                                  \"9997,separate,filter(\\"([A-Z]*)[^A-Z0-9]([A-Z0-9]+)([^A-Z0-9][A-Z0-9]*)*=>$1$2\\"), classnames_map.xml, notunique\", \"||\"), unique", 
                                                          "9999?($7 matches \".*\"), format(\" by $9\"), notunique", "|"), filter("[|][{|][^|]*[|]=>|"), filter("[|]=>"), unique

reserve_course_name_tsearch = getComplexJoinedFields("9998, notunique", "9997,separate,filter(\"([A-Z]*)[^A-Z0-9]([A-Z0-9]+)([^A-Z0-9][A-Z0-9]*)*=>$1$2\"), classnames_map.xml, notunique", "||"), filter("[|][|][^|]*$=>"), unique


reserve_instructor_tsearch = 9999, unique
reserved_barcode_str_stored = 999i?($7 matches ".*")
reserve_id_e_stored = 9997, unique
reserve_library_f_stored = 9995?($7 matches ".*"), unique

# HathiTrust ETAS link lookup
#url_str_stored += getFromFileBy001("extra_data/virginia_hathi_map.txt", " ", ""), custom_map(mapLookupSelect("[ ]",1)), map("(.*)=>https://hdl.handle.net/2027/$1")
#url_label_str_stored += getFromFileBy001("extra_data/virginia_hathi_map.txt", " ", ""), custom_map(mapLookupSelect("[ ]",1)), map("(.*)=>Access via HathiTrust (ETAS)")
#hathi_etas_f_stored = getFromFileBy001("extra_data/virginia_hathi_map.txt", " ", ""), custom_map(mapLookupSelect("[ ]",0))
#uva_availability_f_stored,anon_availability_f_stored |= getFromFileBy001("extra_data/virginia_hathi_map.txt", " ", ""), custom_map(mapLookupSelect("[ ]",1)), map("(.*)=>Online")
#hathi_field_raw = getFromFileBy001("extra_data/virginia_hathi_map.txt", "\\t", "")
#url_str_stored |= getFromFileBy001("extra_data/virginia_hathi_map.txt", "\\t", ""), filter("^S=>https://hdl.handle.net/2027", "^M=>https://catalog.hathitrust.org/Record"), filter("\tallow$=>", "\tdeny$=>?urlappend=%3Bsignon=swle:urn:mace:incommon:virginia.edu")
url_str_stored |= getFromFileBy001("extra_data/virginia_hathi_map.txt", "\\t", ""), filter("^S=>https://hdl.handle.net/2027", "^M=>https://catalog.hathitrust.org/Record"), filter("\tallow$=>", ".*deny$=>null"), map("(https.*)=>$1", "null=>")
#url_label_str_stored |= getFromFileBy001("extra_data/virginia_hathi_map.txt", "\\t", ""), map("S.*\tdeny=>Read via HathiTrust","M.*\tdeny=>HathiTrust Item Page", "S.*\tallow=>Read via HathiTrust", "M.*\tallow=>HathiTrust Item Page")
url_label_str_stored |= getFromFileBy001("extra_data/virginia_hathi_map.txt", "\\t", ""), map("S.*\tdeny=>", "M.*\tdeny=>", "S.*\tallow=>Read via HathiTrust", "M.*\tallow=>HathiTrust Item Page")

access_note_a |= getFromFileBy001("extra_data/virginia_hathi_map.txt", "\\t", ""), map("S.*\tdeny=>This item is no longer available digitally because the HathiTrust Emergency Temporary Access Service (ETAS) has concluded. Items are available in Library stacks beginning August 16 or through request channels shown on this page.", "M.*\tdeny=>This item is no longer available digitally because the HathiTrust Emergency Temporary Access Service (ETAS) has concluded. Items are available in Library stacks beginning August 16 or through request channels shown on this page.", "S.*\tallow=>", "M.*\tallow=>")

#url_str_stored |= getFromFileBy001("extra_data/virginia_hathi_map.txt", "\\t", ""), mapLookupSelect("[\t]",0), filter("^S=>https://hdl.handle.net/2027", "^M=>https://catalog.hathitrust.org/Record")
#url_label_str_stored |= getFromFileBy001("extra_data/virginia_hathi_map.txt", "\\t", ""), map("S.*\tdeny=>Read via HathiTrust -- Must be logged into HathiTrust and on UVA network","M.*\tdeny=>HathiTrust Item Page -- Must be logged into HathiTrust and on UVA network)", "S.*\tallow=>Read via HathiTrust", "M.*\tallow=>HathiTrust Item Page")
#hathi_etas_f_stored = getFromFileBy001("extra_data/virginia_hathi_map.txt", "\\t", ""), mapLookupSelect("[\t]",1), map("deny=>etas", "allow=>allow")
hathi_etas_f_stored = getFromFileBy001("extra_data/virginia_hathi_map.txt", "\\t", ""), mapLookupSelect("[\t]",1), map("deny=>former_etas", "allow=>allow")

#uva_availability_f_stored,anon_availability_f_stored |= getFromFileBy001("extra_data/virginia_hathi_map.txt", "\\t", ""),  map("(.*)=>Online")
uva_availability_f_stored,new_anon_availability_f_stored |= getFromFileBy001("extra_data/virginia_hathi_map.txt", "\\t", ""),  map("deny=>", "allow=>Online")

# PDA fields

pda_coutts_library_a = 949h, (pattern_map.libcoutts)
pda_catkey_a = 001?(949$h matches ".*-[EP]PDA")
pda_isbn_a = 911a
pda_coutts_f_stored = 949h, (pattern_map.coutts)
pattern_map.coutts.pattern_0=.*-PPDA=>pda_print
pattern_map.coutts.pattern_1=.*-EPDA=>pda_ebook

pattern_map.coutts.pattern_0=.*-PPDA=>pda_print
pattern_map.coutts.pattern_1=.*-EPDA=>pda_ebook

pattern_map.catkey.pattern_0=[Uu](.*):.*-[EP]PDA=>u$1
pattern_map.libcoutts.pattern_0=AL-PPDA=>ALD
pattern_map.libcoutts.pattern_1=AS-PPDA=>ASTRO
pattern_map.libcoutts.pattern_2=CH-PPDA=>CHEM
pattern_map.libcoutts.pattern_3=CL-PPDA=>CLEM
pattern_map.libcoutts.pattern_4=FA-PPDA=>FINE ARTS
pattern_map.libcoutts.pattern_5=MA-PPDA=>MATH
pattern_map.libcoutts.pattern_6=MU-PPDA=>MUSIC
pattern_map.libcoutts.pattern_7=PH-PPDA=>PHYS
pattern_map.libcoutts.pattern_8=SE-PPDA=>SCIENG

# special Call Number fields to handle COUTTS PDA items
#call_number_orig_display = custom, getCallNumbersCleanedNew(true), (map.call_number_coutts)
shelfkey = custom, getUniquishLCShelfKeyIfNotShadowed(unique)
reverse_shelfkey = custom, getUniquishReverseLCShelfKeyIfNotShadowed(unique)
lc_call_number_e_stored = custom, getTrimmedUniquishLCCallNumber

call_number_a = custom, getCallNumbersCleanedNewNo050(true), (map.call_number_coutts)
call_number_tsearch = custom, getCallNumbersCleanedNew(false), (map.call_number_coutts), filter("VIDEO[.](.*)=>$1")
call_number_ssort_stored=  custom, getCallNumberCleanedNew(sortable)
call_number_all_e_stored=999a

map.call_number_coutts.COUTTS=null
map.call_number_coutts.displayRawIfMissing=true

#note this indexing specification is what is being newly added to add search strings for subject headings such as 
# Undocumented immigrants  so the the they can be found by their original unchanged subject heading text  
# e.g.    Illegal aliens

subject_tsearch += {650a:690a}?(ind2!=7|(ind2 = 7 & $2 matches "fast|lcsh|tgn|aat|rbprov|rbpap|rbgenr|rbbin|rbpri|rbtyp")), subject_translation_map.xml , join(" -- "), clean, unique

